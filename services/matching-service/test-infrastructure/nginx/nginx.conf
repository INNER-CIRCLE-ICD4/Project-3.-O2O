events {
    worker_connections 1024;
}

http {
    upstream matching_service {
        # Sticky sessions based on user ID for WebSocket support
        ip_hash;
        
        server matching-service-1:8082 max_fails=3 fail_timeout=30s;
        server matching-service-2:8083 max_fails=3 fail_timeout=30s;
        
        # Health check
        keepalive 32;
    }
    
    # Rate limiting configuration
    limit_req_zone $binary_remote_addr zone=ride_limit:10m rate=10r/s;
    limit_req_zone $http_x_user_id zone=user_limit:10m rate=5r/s;
    
    # Response caching
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=matching_cache:10m max_size=100m inactive=60m;
    
    server {
        listen 80;
        server_name localhost;
        
        # Logging
        access_log /var/log/nginx/matching_access.log;
        error_log /var/log/nginx/matching_error.log;
        
        # WebSocket support
        location /ws {
            proxy_pass http://matching_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket timeouts
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }
        
        # API endpoints
        location /api/ {
            # Rate limiting
            limit_req zone=ride_limit burst=20 nodelay;
            limit_req zone=user_limit burst=10 nodelay;
            
            proxy_pass http://matching_service;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Cache GET requests
            proxy_cache_methods GET HEAD;
            proxy_cache matching_cache;
            proxy_cache_valid 200 1m;
            proxy_cache_use_stale error timeout invalid_header updating;
            add_header X-Cache-Status $upstream_cache_status;
        }
        
        # Health check endpoint
        location /health {
            proxy_pass http://matching_service/actuator/health;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            access_log off;
        }
        
        # Metrics endpoint (Prometheus)
        location /metrics {
            proxy_pass http://matching_service/actuator/prometheus;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Only allow from Prometheus
            allow 172.16.0.0/12;  # Docker network
            deny all;
        }
        
        # Circuit breaker simulation
        location /api/v1/rides {
            proxy_pass http://matching_service;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Circuit breaker headers
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 5s;
            
            # Add retry headers
            add_header X-Upstream-Retries $upstream_http_x_upstream_retries;
            add_header X-Upstream-Status $upstream_status;
        }
        
        # Error pages
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
}