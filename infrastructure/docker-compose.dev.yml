version: '3.8'

# Development 환경용 오버라이드
# 사용법: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up

services:
  # 개발 시에는 인프라만 실행 (서비스들은 IDE에서 실행)
  auth-service:
    profiles: ["full"] # 기본적으로 비활성화

  matching-service:
    profiles: ["full"]

  location-service:
    profiles: ["full"]

  payment-service:
    profiles: ["full"]

  notification-service:
    profiles: ["full"]

  gateway:
    profiles: ["full"]

  # 개발용 설정 변경
  postgres:
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ddakta_user
      POSTGRES_PASSWORD: ddakta_password
      POSTGRES_DB: ddakta_db
      # 개발환경에서는 더 자세한 로깅
      POSTGRES_LOG_STATEMENT: all
      POSTGRES_LOG_MIN_DURATION_STATEMENT: 0

  redis:
    ports:
      - "6379:6379"
    # 개발환경에서는 데이터 영속성보다 성능 우선
    command: redis-server --appendonly no --save ""

  kafka:
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      # 개발환경에서는 짧은 리텐션 시간
      KAFKA_LOG_RETENTION_HOURS: 1
      KAFKA_LOG_RETENTION_BYTES: 104857600

  # 개발 도구 추가
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: ddakta-kafka-ui
    depends_on:
      - kafka
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: ddakta-local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - ddakta-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: ddakta-redis-commander
    depends_on:
      - redis
    ports:
      - "8091:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
    networks:
      - ddakta-network

  # PostgreSQL 관리 도구
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ddakta-pgadmin
    depends_on:
      - postgres
    ports:
      - "8092:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@ddakta.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - ddakta-network

volumes:
  pgadmin_data: